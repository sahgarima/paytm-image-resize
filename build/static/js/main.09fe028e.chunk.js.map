{"version":3,"sources":["logo.svg","components/Preview.js","firebase.js","components/ImageConvertor.js","components/Page.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Preview","props","useState","croppedImageUrl","setCroppedImageUrl","x","sizes","width","y","height","aspect","crop","setCrop","imageRef","setImageRef","className","active","id","name","role","aria-labelledby","src","style","overflow","maxHeight","maxWidth","ruleOfThirds","onImageLoaded","image","unit","onComplete","percentCrop","fileName","canvas","document","createElement","scaleX","naturalWidth","scaleY","naturalHeight","getContext","drawImage","Promise","resolve","toBlob","blob","fileUrl","window","URL","revokeObjectURL","createObjectURL","getCroppedImg","then","updateCropedImages","makeClientCrop","onChange","onDragStart","onDragEnd","minWidth","minHeight","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","storage","_","require","withRouter","state","previews","files","isReady","msg","count","loading","key","val","arr","index","checkFilled","push","setState","this","length","onSelectFile","e","target","localStorage","setItem","reader","FileReader","_this","onload","img","Image","result","alert","readAsDataURL","bind","preventDefault","promises","forEach","file","getItem","uploadTask","ref","child","put","on","TaskEvent","STATE_CHANGED","snapshot","progress","bytesTransferred","totalBytes","TaskState","RUNNING","console","log","error","code","a","getDownloadURL","all","history","catch","err","i","newFile","Math","random","findIndex","chr","type","color","lang","accept","onClick","onUploadSubmission","data-toggle","href","aria-controls","aria-selected","map","data","PureComponent","images","downloadURLs","getImage","handleBack","this1","listAll","res","items","itemRef","url","replace","toUpperCase","alt","React","Component","App","exact","path","Boolean","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.09fe028e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { useState } from 'react';\nimport 'react-image-crop/lib/ReactCrop.scss';\nimport ReactCrop from 'react-image-crop';\n\nexport default function Preview(props) {\n    // let croppedImageUrl = \"\";\n    let [croppedImageUrl, setCroppedImageUrl] = useState({})\n    let [crop, setCrop] = useState({\n        x: props.sizes.width,\n        y: props.sizes.height,\n        aspect: 3 / 2,\n    })\n    let [imageRef, setImageRef] = useState(\"\")\n\n\n    const onImageLoaded = image => {\n        // console.log(\"in onImageLoaded\")\n        setImageRef(image)\n        // this.imageRef = image;\n        setCrop({ unit: 'px', maxWidth: props.sizes.width, maxHeight: props.sizes.height });\n        // this.setState({\n        //     crop: makeAspectCrop({\n        //         x: 0,\n        //         y: 0,\n        //         aspect: crop.aspect,\n        //         width: 100,\n        //     }, image.naturalWidth / image.naturalHeight),\n        //     image,\n        // });\n        return false;\n    };\n    const onCropComplete = (crop, percentCrop) => {\n        // console.log('onCropComplete', crop, percentCrop);\n        makeClientCrop(crop);\n    };\n\n    function makeClientCrop(crop) {\n        // console.log(\"makeClientCrop-----\", imageRef, crop.width, crop.height)\n        if (imageRef && crop.width && crop.height) {\n            // console.log(imageRef)\n            getCroppedImg(imageRef, crop, `${props.name}.jpeg`).then(croppedImageUrl => {\n                //    let obj={}\n                //    obj[\"id\"] = Math.random();\n                //     obj[\"name\"] = croppedImageUrl;\n                //     obj[\"type\"] = \"image/jpeg\";\n                //     obj[\"size\"]= \"\"\n                setCroppedImageUrl(croppedImageUrl)\n                props.updateCropedImages(props.name, croppedImageUrl)\n            }\n\n                // this.setState({ croppedImageUrl })\n            );\n        }\n    }\n    function getCroppedImg(image, crop, fileName) {\n        const canvas = document.createElement('canvas');\n        const scaleX = image.naturalWidth / image.width;\n        const scaleY = image.naturalHeight / image.height;\n        canvas.width = crop.width;\n        canvas.height = crop.height;\n        const ctx = canvas.getContext('2d');\n\n        ctx.drawImage(\n            image,\n            crop.x * scaleX,\n            crop.y * scaleY,\n            crop.width * scaleX,\n            crop.height * scaleY,\n            0,\n            0,\n            crop.width,\n            crop.height\n        );\n\n        return new Promise(resolve => {\n            canvas.toBlob(blob => {\n                // console.log(blob, \"blob\")\n                let fileUrl = \"\"\n                blob.fileName = fileName\n                window.URL.revokeObjectURL(fileUrl);\n                fileUrl = window.URL.createObjectURL(blob);\n\n                blob.name = fileUrl //fileName; // eslint-disable-line no-param-reassign\n                resolve(blob);\n            }, 'image/jpeg');\n        });\n    }\n    const onCropChange = (crop, percentCrop) => {\n        // console.log('onCropChange', crop, percentCrop);\n        setCrop(percentCrop)\n        // this.setState({ crop: percentCrop });\n    };\n    const onDragStart = () => {\n        // console.log('onDragStart');\n    };\n\n    const onDragEnd = () => {\n        // console.log('onDragEnd');\n    };\n    return (\n        <div className={`tab-pane fade show ${props.active}`} id={`nav-${props.name}`} role=\"tabpanel\" aria-labelledby={`nav-${props.name}-tab`}>\n\n            <div className=\"row\">\n                {\n                    croppedImageUrl && <div className=\"col pt-5 pb-3\">\n                        <div className=\"text-center\">\n                            <img src={croppedImageUrl.name} />\n                        </div>\n                    </div>\n                }\n\n            </div>\n            <div className=\"row \">\n                <div className=\"col\">\n                    <div style={{ overflow: \"scroll\", maxHeight: \"1024px\", maxWidth: \"1024px\" }}>\n                        <ReactCrop\n                            src={props.src}\n                            crop={crop}\n                            ruleOfThirds\n                            onImageLoaded={onImageLoaded}\n                            onComplete={onCropComplete}\n                            onChange={onCropChange}\n                            onDragStart={onDragStart}\n                            onDragEnd={onDragEnd}\n                            maxWidth={props.sizes.width}\n                            maxHeight={props.sizes.height}\n                            minWidth={props.sizes.width}\n                            minHeight={props.sizes.height}\n                        />\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}","import firebase from \"firebase/app\";\nimport \"firebase/storage\";\n\n// Your web app's Firebase configuration\n var firebaseConfig = {\n  apiKey: \"AIzaSyC_VfFZpPxaMpIdPCsWxr4VOem62MW9Aig\",\n  authDomain: \"spaceproject-93b70.firebaseapp.com\",\n  databaseURL: \"https://spaceproject-93b70.firebaseio.com\",\n  projectId: \"spaceproject-93b70\",\n  storageBucket: \"spaceproject-93b70.appspot.com\",\n  messagingSenderId: \"869801616027\",\n  appId: \"1:869801616027:web:cac4c3c20c521b2d81dc3e\",\n  measurementId: \"G-3JXM9D71D1\"\n};\n\n// Initialize Firebase\n\nfirebase.initializeApp(firebaseConfig);\n\nconst storage = firebase.storage();\n\nexport { firebase, storage as default }; \n \n \n ","import React, { PureComponent } from 'react';\nimport Preview from './Preview';\nimport { withRouter } from \"react-router-dom\";\nimport firebase from 'firebase/app'\nimport 'firebase/storage'\nimport storage from \"../firebase\"\nimport Loader from 'react-loader-spinner'\n\nvar _ = require('lodash');\n// import '../dist/ReactCrop.css';\n\n\n\nexport default withRouter(class ImageConvertor extends PureComponent {\n    constructor(props) {\n        super(props)\n        this.checkFilled = this.checkFilled.bind(this)\n    }\n    state = {\n        src: null,\n        previews: [{ name: \"horizontal\", sizes: { width: \"755\", height: \"450\" } }, { name: \"vertical\", sizes: { width: \"365\", height: \"450\" } }, { name: \"horizontal-small\", sizes: { width: \"365\", height: \"212\" } }, { name: \"gallery\", sizes: { width: \"380\", height: \"380\" } }],\n        files: [],\n        isReady: false,\n        msg: \"\",\n        count: 0,\n        loading: false\n    };\n    updateCropedImages = (key, val) => {\n        // console.log(key)\n        const arr = this.state.files;\n        const index = this.checkFilled(key)\n        if (index != -1) {\n            arr[index] = val\n        } else {\n            arr.push(val)\n        }\n\n        this.setState({ files: arr, count: this.state.count++ }, function () {\n            if (this.state.files.length == 4) {\n                this.setState({ isReady: true, msg: \"\" })\n\n            }\n        });\n    }\n    onSelectFile = e => {\n\n        if (e.target.files && e.target.files.length > 0) {\n            localStorage.setItem('imageName', e.target.files[0].name);\n            const reader = new FileReader();\n            let _this = this\n            reader.onload = function (e) {\n                var img = new Image;\n\n                img.onload = function () {\n                    if (img.width == 1024 && img.height == 1024) {\n                        _this.setState({ src: reader.result, msg: \"Lets start and crop the images to the smaller size \" });\n                    } else {\n                        alert(`Error:Image should be 1024*1024`);\n                    }\n\n                };\n                img.src = reader.result;\n            };\n\n            reader.readAsDataURL(e.target.files[0]);\n        }\n    };\n\n\n    onUploadSubmission(e) {\n        this.setState({ loading: true })\n        e.preventDefault(); // prevent page refreshing\n        const promises = [];\n        this.state.files.forEach(file => {\n            const name = localStorage.getItem('imageName');\n\n            const uploadTask = firebase.storage().ref().child(`Cropped/${name}/${file.fileName}`).put(file);\n            promises.push(uploadTask);\n            uploadTask.on(\n                firebase.storage.TaskEvent.STATE_CHANGED,\n                snapshot => {\n                    const progress =\n                        (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\n                    if (snapshot.state === firebase.storage.TaskState.RUNNING) {\n                        console.log(`Progress: ${progress}%`);\n                    }\n                },\n                error => console.log(error.code),\n                async () => {\n                    const downloadURL = await uploadTask.snapshot.ref.getDownloadURL();\n                    // do something with the url\n                }\n            );\n        });\n        Promise.all(promises)\n            .then(() => { alert('All files uploaded'); this.props.history.push('/page') })\n            .catch(err => console.log(err.code));\n\n    }\n\n    onFileChange(e) {\n        let arr = []\n        for (let i = 0; i < e.target.files.length; i++) {\n            const newFile = e.target.files[i];\n            newFile[\"id\"] = Math.random();\n            arr.push(newFile)\n            // add an \"id\" property to each File object\n\n        }\n        this.setState({ files: arr }, function () {\n            // console.log(this.state.files)\n        });\n\n    };\n    checkFilled(name) {\n        return _.findIndex(this.state.files, function (chr) {\n            return chr.fileName == `${name}.jpeg`;\n        });\n    }\n\n    render() {\n        // var foundValue = this.state.files.find(obj=>obj.fileName==='horizontal.jpeg');\n        //         if (!this.state.loading) {\n        //             return (<Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80}/>\n        // )\n        //         } else {\n        return (\n            <>\n                {this.state.loading &&\n                    <div className=\"popup\"><Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} /></div>\n                }\n                <div className=\"container\">\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"form-group row pt-5\">\n                                {/* <label className=\"col-sm-2 col-form-label\">Select Image</label> */}\n                                <div className=\"col-sm-6\">\n                                    <div className=\"custom-file\">\n                                        <input type=\"file\" className=\"custom-file-input\" onChange={this.onSelectFile} id=\"customFileLang\" lang=\"es\" accept=\"image/png,image/gif,image/jpeg\" />\n                                        <label className=\"custom-file-label\">Select Image</label>\n                                    </div>\n                                </div>\n                                {\n                                    this.state.isReady && (\n                                        <div className=\"col-sm-6 text-right\">\n                                            <button className=\"btn btn-success\" onClick={this.onUploadSubmission.bind(this)}>Create WebPage</button>\n                                        </div>\n                                    )\n                                }\n\n                            </div>\n                        </div>\n\n                    </div>\n                    {this.state.msg &&\n                        (<div className=\"row pt-3 pb-4\">\n                            <div className=\"col\">\n                                <h6 className=\"text-danger\">{this.state.msg}</h6>\n                            </div>\n                        </div>)\n                    }\n\n                    {this.state.src && (\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <nav>\n                                    <ul className=\"nav nav-tabs nav-justified\">\n                                        <li className=\"nav-item\">\n                                            <a className={`nav-link active ${this.checkFilled(\"horizontal\") != -1 ? \"complete\" : \"\"}`} data-toggle=\"tab\" href=\"#nav-horizontal\" role=\"tab\" aria-controls=\"nav-horizontal\" aria-selected=\"true\">Horizontal</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className={`nav-link ${this.checkFilled(\"vertical\") != -1 ? \"complete\" : \"\"}`} data-toggle=\"tab\" href=\"#nav-vertical\" role=\"tab\" aria-controls=\"nav-vertical\" aria-selected=\"false\"> Vertical</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className={`nav-link ${this.checkFilled(\"horizontal-small\") != -1 ? \"complete\" : \"\"}`} data-toggle=\"tab\" href=\"#nav-horizontal-small\" role=\"tab\" aria-controls=\"nav-horizontal-small\" aria-selected=\"false\">Horizontal small</a>\n                                        </li>\n                                        <li className=\"nav-item\">\n                                            <a className={`nav-link ${this.checkFilled(\"gallery\") != -1 ? \"complete\" : \"\"}`} data-toggle=\"tab\" href=\"#nav-gallery\" role=\"tab\" aria-controls=\"nav-gallery\" aria-selected=\"false\">Gallery</a>\n                                        </li>\n                                    </ul>\n                                </nav>\n\n                                <div className=\"tab-content\" id=\"nav-tabContent\">\n                                    {\n                                        this.state.previews.map((data, i) => {\n                                            return (<Preview updateCropedImages={this.updateCropedImages.bind(this)} key={i} name={data.name} sizes={data.sizes} active={data.name === \"horizontal\" ? \"active\" : \"\"} src={this.state.src}></Preview>)\n                                        })\n                                    }</div>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </>\n        );\n        // }\n\n\n\n    }\n}\n)\n","import React, { useState } from 'react';\nimport storage from \"../firebase\"\nimport { withRouter } from \"react-router-dom\";\nimport Loader from 'react-loader-spinner'\n\nexport default withRouter(class Page extends React.Component {\n\n\n    constructor(props) {\n        super(props)\n        this.state = {\n            images: [],\n            downloadURLs: {},\n            loading:true\n        }\n        this.getImage = this.getImage.bind(this)\n        this.handleBack = this.handleBack.bind(this)\n    }\n    componentDidMount() {\n        this.getImage()\n    }\n\n    getImage() {\n        const this1 = this\n        let { state } = this\n        const name = localStorage.getItem('imageName');\n        storage.ref().child(`Cropped/${name}`).listAll().then(function (res) {\n            let arr = [];\n            res.items.forEach(function (itemRef) {\n                itemRef\n                    .getDownloadURL()\n                    .then(url => {\n                        let downloadURLs = {};\n                        downloadURLs[\"url\"] = url;\n                        downloadURLs[\"name\"] = (itemRef.name).replace(\".jpeg\",'')\n                        arr.push(downloadURLs)\n                        this1.setState({ images: arr,loading:false });\n                    })\n                    .catch(error => {\n                        // Handle any errors\n                    });\n            });\n\n        })\n            .catch(function (error) {\n                // Uh-oh, an error occurred!\n            });\n    }\n    handleBack(){\n        this.props.history.push('/')\n    }\n    render() {\n        return (\n            <>\n            {this.state.loading &&\n                    <div className=\"popup\"><Loader type=\"Circles\" color=\"#00BFFF\" height={80} width={80} /></div>\n                }\n            \n            <div className=\"container border mt-5\">\n                <div className=\"row m-3\">\n                    <div className=\"col text-left\">\n                        <button className=\"btn btn-success\" onClick={this.handleBack}>Go To Home</button>\n                    </div>\n\n                </div>\n                {\n                    this.state.images.map((data, id) => {\n                        return (\n                            <div key={id} className=\"row pb-5\">\n                                <div className=\"col\">\n                                <h2>{(data.name).toUpperCase()}</h2>\n                                <p>This is {data.name} Image:</p>\n                                <img src={data.url} alt={data.name} className=\"img-responsive rounded\" />\n                            </div></div>)\n                    })\n                }\n\n\n            </div>\n\n</>\n\n        );\n    }\n})","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport ImageConvertor from './components/ImageConvertor'\nimport Page from './components/Page'\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Router>\n      <Switch>\n        <Route exact path=\"/\">\n          <ImageConvertor />\n        </Route>\n        <Route path=\"/page\">\n          <Page />\n        </Route>\n      </Switch>\n      </Router>\n       <footer className=\"page-footer font-small blue pt-4\">\n        Developed By:<strong> Garima Sah</strong>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}